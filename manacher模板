#include<bits/stdc++.h>
#define LL long long 
#define N 1000010
using namespace std;
char s[N], str[N << 1];//s为原字符串，str为变化后的字符串
int p[N << 1], Case = 0;
//p[i]代表以第i个字符为中心的最大回文串的长度

inline int Max(int a, int b) {
  static int mask; 
  mask = (b - a) >> 31;
  return (a & mask) | (b & ~mask);
}
inline int Min(int a, int b) {
  static int mask; 
  mask = (a - b) >> 31;
  return (a & mask) | (b & ~mask);
}

int main() {
  while(~scanf("%s", s)) {//多组输入
    if (!strcmp(s, "END")) break;//判断结束条件
    int l = strlen(s), len = 2, id = 0, mx = 0, ans = 1;
    //l为当前字符串的长度，len为新的字符串的长度，ans代表答案
    //mx代表当前最大回文串的右端，id代表当前最大回文串的中间
    str[0] = '$';
    str[1] = '#';
    for (int i = 0; i < l; i++) {
      str[len++] = s[i];
      str[len++] = '#';
    }//构建新的字符串
    str[len] = '\0';//新的字符串的结束部分
    
    for (int i = 0; i < len; i++) {
      if (mx > i) p[i] = Min(p[id * 2 - i], mx - i);
      else p[i] = 1;
      
      for (; str[i - p[i]] == str[i + p[i]]; p[i]++);
      
      if (i + p[i] > mx) {
        mx = i + p[i];
        id = i;
      }
      ans = Max(p[i], ans);
    }
    printf("Case %d: %d\n", ++Case, ans - 1);
  }
  return 0;
}
